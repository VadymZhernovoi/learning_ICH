'''
1.  Проверка на подмножество
    Напишите программу, которая проверяет, содержит ли первое множество все элементы второго множества.
    Реализуйте решение несколькими способами. Решите одним из способов не используя возможности множеств.

Данные: set1 = {1, 2, 3, 4}
        set2 = {2, 3, 6}
Пример вывода: True
'''
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print('set1 = ', set1, '\n', 'set2 = ', set2 , sep='')

print(set2.issubset(set1))
print(set2 <= set1)
print((set1 & set2) == set2)
print((set1 | set2) == set1)
print(not(set2 - set1)) # len((set2 - set1) == 0
flag = True
for n in set2:
    if n not in set1:
        flag = False
        break
print(flag)

'''
2.  Зеркальное подмножество
    Напишите программу, которая проверяет, являются ли элементы одного из множеств подмножеством другого. 
    В случае положительного ответа возвращает разницу между двумя множествами. Проверить необходимо в обе стороны.
    Данные:
    set1 = {2, 3, 4, 5, 6}
    set2 = {4, 5}
    Пример вывода:
    Подмножество: True
    Разница: {2, 3, 6}
'''
set1 = {2, 3, 4, 5, 6}
set2 = {4, 5, 9}
print('set1 = ', set1, '\n', 'set2 = ', set2 , sep='')

flag = False
set_diff = set()
if set1 <= set2:
    flag = True
    set_diff = set2 - set1
elif set1 >= set2:
    flag = True
    set_diff = set1 - set2

print('Подмножество:', flag)
if flag:
    print('Разница:', set_diff)
